//
//  NewsfeedInteractor.swift
//  VkNewsFeed
//
//  Created by Иван Абрамов on 02.09.2020.
//  Copyright (c) 2020 Иван Абрамов. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol NewsfeedBusinessLogic {
    func makeRequest(request: Model.Request.RequestType)
}

class NewsfeedInteractor: NewsfeedBusinessLogic {
    var presenter: NewsfeedPresentationLogic?
    var worker: NewsfeedWorker = NewsfeedWorker()
    
  // MARK: Make request
  
  func makeRequest(request: Model.Request.RequestType) {
    switch request {
    case .getNewsFeed:
        worker.getFeed { (revealedPostIds, feedResponse) in
            self.presenter?.presentData(response: .presentNewsFeed(feed: feedResponse, revealedPostIds: revealedPostIds))
        }
        
    case .revealPost(let id):
        worker.revealPost(id: id) { (feedResponse, revealedPostIds) in
            self.presenter?.presentData(response: .presentNewsFeed(feed: feedResponse, revealedPostIds: revealedPostIds))
        }
    case .getUser:
        worker.getUser { (userResponse) in
            self.presenter?.presentData(response: .presentUser(user: userResponse))
        }
    case .getOldFeed:
        self.presenter?.presentData(response: .displayFooterView)
        worker.getOldFeed { (revealedPostIds, feedResponse) in
            self.presenter?.presentData(response: .presentNewsFeed(feed: feedResponse, revealedPostIds: revealedPostIds))
        }
    case .performSearch(text: let text):
        worker.performSearch(withText: text) { (revealedPostIds, feedResponse) in
            self.presenter?.presentData(response: .presentNewsFeed(feed: feedResponse, revealedPostIds: revealedPostIds))
        }
    case .cancelSearch:
        worker.cancelSearchcompletion { (revealedPostIds, feedResponse) in
            self.presenter?.presentData(response: .presentNewsFeed(feed: feedResponse, revealedPostIds: revealedPostIds))
        }
    }
  }
}
